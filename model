# model.py

import torch
import torch.nn as nn
import torch.nn.functional as F

class HistopathologyCNN(nn.Module):
    def __init__(self, num_classes=2):
        super(HistopathologyCNN, self).__init__()
        
        self.conv_block = nn.Sequential(
            nn.Conv2d(3, 32, kernel_size=3, padding=1),  # (batch, 32, H, W)
            nn.ReLU(),
            nn.MaxPool2d(2, 2),                          # (batch, 32, H/2, W/2)

            nn.Conv2d(32, 64, kernel_size=3, padding=1), # (batch, 64, H/2, W/2)
            nn.ReLU(),
            nn.MaxPool2d(2, 2),                          # (batch, 64, H/4, W/4)

            nn.Conv2d(64, 128, kernel_size=3, padding=1),
            nn.ReLU(),
            nn.MaxPool2d(2, 2)                           # (batch, 128, H/8, W/8)
        )

        self.fc_block = nn.Sequential(
            nn.Linear(128 * 16 * 16, 256),  # Adjust 16*16 if your input image is not 128x128
            nn.ReLU(),
            nn.Dropout(0.5),
            nn.Linear(256, num_classes)
        )

    def forward(self, x):
        x = self.conv_block(x)
        x = x.view(x.size(0), -1)  # Flatten
        x = self.fc_block(x)
        return x
